sudo: required
dist: trusty
language: generic

addons:
  apt:
    sources: &commonsources
    packages: &commonpackages
    - cmake
    - cmake-data
    - doxygen
    - texlive-base
    - python-virtualenv
    - python-pytest
    # avoid installing fusion
    - libboost-system1.55-dev
    - libboost-thread1.55-dev
    - libboost-filesystem1.55-dev
    - libboost-date-time1.55-dev
    - libboost-timer1.55-dev
    - libboost-chrono1.55-dev
    - python-pip
    - libtbb-dev
    - ccache
    - libsuitesparse-dev
    - lcov
    - curl
    - ninja-build
    - python3-requests

before_install:
  - |-
    : ${OPTS:="config.opts/travis.ninja"} && export OPTS
  - |-
    : ${BUILD_CMD:="ninja -k 10000 -j 2"} && export BUILD_CMD
  # workaround for https://github.com/travis-ci/travis-ci/issues/5285
  - sudo -E apt-get install -y -q libtbb-dev python-pip libmetis-dev python3-pip libfftw3-mpi-dev libfftw3-bin libfftw3-dev libopenmpi-dev openmpi-bin
  - sudo -E pip3 install -U requests virtualenv cpp-coveralls
  - sudo -E pip install -U requests virtualenv cpp-coveralls
  - export PATH=/usr/lib/ccache:$PATH
  - cd $HOME
  - test -d src || git clone https://github.com/wwu-numerik/dune-multiscale-super.git src
  - cd $HOME/src
  - travis_retry git submodule update --init --recursive
  - git submodule status
  - ./scripts/bash/travis_prepare_compiler_setup.sh ${GCCDEFAULT}
  - export DCTRL_ARG="--builddir=${DUNE_BUILD_DIR}  --opts=${OPTS}"
  # our local scripts look for an OPTS env entry
  - ./local/bin/download_external_libraries.py
  - ./local/bin/build_external_libraries.py
  # ensures ${MY_MODULE} from travis own checkout is used
  - echo removing modules ${MODULES_TO_DELETE}
  - rm -rf ${MODULES_TO_DELETE} ${MY_MODULE}

# command to install dependencies
install:
  - cd $HOME/src
  - export SRC_DCTRL=$PWD/dune-common/bin/dunecontrol
  - ${SRC_DCTRL} ${DCTRL_ARG} all
  # move my travis checkout into this source tree
  - cp -ra ${TRAVIS_BUILD_DIR} .

before_script:
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} configure
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD}
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} test_binaries

script:
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} test
    # retry this step becuase of the implicated race condition in cloning an pushing with multiple builder running in parallel
    - travis_retry $HOME/src/scripts/bash/travis_upload_test_logs.bash ${DUNE_BUILD_DIR}/${MY_MODULE}/dune/multiscale/*/test/

    - |
     if [ "x${CLANG_FORMAT}" != "x" ] ; then
        git config --global hooks.clangformat ${CLANG_FORMAT}
        PYTHONPATH=$HOME/src/scripts/python/ python3 -c "import travis_report as tp; tp.clang_format_status(\"${TRAVIS_BUILD_DIR}\")"
     fi
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} headercheck
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} install | grep -v "Installing"
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} package_source

# runs independent of 'script' failure/success
after_script:
  - |
    #if [ $TRAVIS_JOB_NUMBER == *.1 ] ; then
      ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} doc
      ./.travis/init_sshkey.sh wwu-numerik.github.io.rsa ${wwu-numerik.github.io.key} "none" 
      ./.travis/deploy_docs.sh ${MY_MODULE} ${DUNE_BUILD_DIR}
      #fi
      echo $TRAVIS_JOB_NUMBER
      test [ [ $TRAVIS_JOB_NUMBER == *.1 ] && echo yay
  - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec make clean
  - export CTEST_ARG="--output-on-failure -S ${TRAVIS_BUILD_DIR}/.travis.ctest"

notifications:
  email:
    on_success: change
    on_failure: change

branches:
  except:
    - gh-pages

cache:
  directories:
    - $HOME/.ccache

env:
  global:
    - secure: "BcuIJYZ6//P3W6yGkjlqxUZhvWA2NZ7lvCQLtsdB7wXpIDBnp9AKsuvtPBEOgRrqNyy6wKIPtjcK5GejulbcUQFg2XagHHdTstlFwn2JxoWCpxsi3TlJaMdbo4qrE9hd+crokaL7nrtLXQ8+aGT8Z19JPFIEwdgzRIxPTTkdXkY="
    - MY_MODULE=dune-multiscale 
    - DUNE_BUILD_DIR=${HOME}/dune_build/ 
    - INSTALL_DIR=$HOME/dune 
    - CTEST_OUTPUT_ON_FAILURE=1 
    - MODULES_TO_DELETE="dune-mlmc"
    - GCCDEFAULT=4.9
    - LIBRARY_PATH=/usr/lib

matrix:
  include:
    - os: linux
      addons: &gcc49
        apt:
          sources:
          - *commonsources
          packages:
          - *commonpackages
      env: CXX=g++ CC=gcc

    - os: linux
      addons:
        apt:
          sources:
          - *commonsources
          packages:
          - *commonpackages
      env: CXX=g++ CC=gcc GCCDEFAULT=5

    - os: linux
      addons:
        apt:
          sources:
          - *commonsources
          - ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
          packages:
          - *commonpackages
          - ['clang-3.7', 'CLANG_FORMAT=clang-format-3.7']
      env: CXX=clang++-3.7 CC=clang-3.7 CLANG_FORMAT=clang-format-3.7

    - os: linux
      addons:
        apt:
          sources:
          - *commonsources
          - ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
          packages:
          - *commonpackages
          - ['clang-3.7']
      env: OPTS=config.opts/travis.make BUILD_CMD="make -k -j2" CXX=clang++-3.7 CC=clang-3.7 

